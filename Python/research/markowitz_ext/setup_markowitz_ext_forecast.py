import pandas as pdimport numpy as npfrom data_processing.ts_utils import get_quarters, get_last_quarterfrom data_processing.read_in_data import read_in_fama_frenchdef add_predictors_to_df(assets_df):    assets_df = assets_df.sort_values(['Ticker', 'Date'])        assets_df['Chg_1mo_MA'] = assets_df.groupby('Ticker')['Chg'].rolling(21).mean().values    assets_df['Chg_3mo_MA'] = assets_df.groupby('Ticker')['Chg'].rolling(63).mean().values    assets_df['Chg_1yr_MA'] = assets_df.groupby('Ticker')['Chg'].rolling(252).mean().values        ff_df = read_in_fama_french(assets_df['Date'].unique())    ff_df['Mkt-RF_1mo_MA'] = ff_df['Mkt-RF'].rolling(21).mean()    ff_df['HML_1mo_MA'] = ff_df['HML'].rolling(21).mean()    ff_df['SMB_1mo_MA'] = ff_df['SMB'].rolling(21).mean()    ff_df['Mkt-RF_3mo_MA'] = ff_df['Mkt-RF'].rolling(63).mean()    ff_df['HML_3mo_MA'] = ff_df['HML'].rolling(63).mean()    ff_df['SMB_3mo_MA'] = ff_df['SMB'].rolling(63).mean()    ff_df['Mkt-RF_1yr_MA'] = ff_df['Mkt-RF'].rolling(252).mean()    ff_df['HML_1yr_MA'] = ff_df['HML'].rolling(252).mean()    ff_df['SMB_1yr_MA'] = ff_df['SMB'].rolling(252).mean()    assets_df = assets_df.merge(ff_df, left_on='Date', right_index=True).sort_values(['Ticker', 'Date'])    assets_df = assets_df.drop(columns=['Open', 'High', 'Low', 'Close', 'Adj Close', 'Volume', 'Chg',                                          'Mkt-RF', 'HML', 'SMB', 'RF'])    assets_df = assets_df.reset_index(drop=True)    return assets_dfdef add_predictands_to_df(assets_df, asset_set, lookback_method, lookback_period=int(252/4)):    coefs_regr_preds_df = assets_df.copy()    coefs_regr_preds_df['Year'] = coefs_regr_preds_df.index.year    coefs_regr_preds_df['Quarter'] = get_quarters(coefs_regr_preds_df.index)    date_df = coefs_regr_preds_df[['Year', 'Quarter']].reset_index().copy()    lookback_name_by_method = {'rolling_1mo' : '1mo',                                'rolling_3mo' : '3mo',                                'yearly' : '1yr',                               'quarterly' : '3mo'}    predictand_fwd_name = lookback_name_by_method[lookback_method.lower()]        # Create Predictors DF    coefs = ['r_MVP', 'sigma_MVP', 'u']    predictors = np.append(coefs_regr_preds_df.columns.values[~coefs_regr_preds_df.columns.isin(['Date'])], coefs)    predictands = [coef + '_fwd' + predictand_fwd_name for coef in coefs]    coefs_df_1mo = pd.read_csv('../Portfolios/'+asset_set+'/EF_Coefs/ef_coefs_rolling_1mo.csv', index_col=0, parse_dates=True)[coefs]    coefs_df_1mo.columns = [col + '_1mo' for col in coefs_df_1mo.columns]    coefs_df_3mo = pd.read_csv('../Portfolios/'+asset_set+'/EF_Coefs/ef_coefs_rolling_3mo.csv', index_col=0, parse_dates=True)[coefs]    coefs_df_3mo.columns = [col + '_3mo' for col in coefs_df_3mo.columns]    coefs_df_1yr = pd.read_csv('../Portfolios/'+asset_set+'/EF_Coefs/ef_coefs_rolling_1yr.csv', index_col=0, parse_dates=True)[coefs]    coefs_df_1yr.columns = [col + '_1yr' for col in coefs_df_1yr.columns]        coefs_df = coefs_df_1mo.merge(coefs_df_3mo, left_index=True, right_index=True).merge(coefs_df_1yr, left_index=True, right_index=True)            if((lookback_method != 'yearly') & (lookback_method != 'quarterly')):        coefs_df['r_MVP_1mo_1yr_MA'] = coefs_df['r_MVP_1mo'].rolling(252).mean()        coefs_df['sigma_MVP_1mo_1yr_MA'] = coefs_df['sigma_MVP_1mo'].rolling(252).mean()        coefs_df['u_1mo_1yr_MA'] = coefs_df['u_1mo'].rolling(252).mean()        coefs_df['r_MVP_1mo_3mo_MA'] = coefs_df['r_MVP_1mo'].rolling(int(252/4)).mean()        coefs_df['sigma_MVP_1mo_3mo_MA'] = coefs_df['sigma_MVP_1mo'].rolling(int(252/4)).mean()        coefs_df['u_1mo_3mo_MA'] = coefs_df['u_1mo'].rolling(int(252/4)).mean()        coefs_df['r_MVP_1mo_1mo_MA'] = coefs_df['r_MVP_1mo'].rolling(21).mean()        coefs_df['sigma_MVP_1mo_1mo_MA'] = coefs_df['sigma_MVP_1mo'].rolling(21).mean()        coefs_df['u_1mo_1mo_MA'] = coefs_df['u_1mo'].rolling(21).mean()        coefs_df['r_MVP_1mo_daily_chg'] = coefs_df['r_MVP_1mo'].pct_change()        coefs_df['sigma_MVP_1mo_daily_chg'] = coefs_df['sigma_MVP_1mo'].pct_change()        coefs_df['u_1mo_daily_chg'] = coefs_df['u_1mo'].pct_change()        coefs_df['r_MVP_1mo_daily_chg_fwd'] = coefs_df['r_MVP_1mo_daily_chg'].shift(-1)        coefs_df['sigma_MVP_1mo_daily_chg_fwd'] = coefs_df['sigma_MVP_1mo_daily_chg'].shift(-1)        coefs_df['u_1mo_daily_chg_fwd'] = coefs_df['u_1mo_daily_chg'].shift(-1)                coefs_df['r_MVP_1mo_daily_diff'] = coefs_df['r_MVP_1mo'] - coefs_df['r_MVP_1mo'].shift(1)        coefs_df['sigma_MVP_1mo_daily_diff'] = coefs_df['sigma_MVP_1mo'] - coefs_df['sigma_MVP_1mo'].shift(1)        coefs_df['u_1mo_daily_diff'] = coefs_df['u_1mo'] - coefs_df['u_1mo'].shift(1)        coefs_df['r_MVP_1mo_daily_diff_fwd'] = coefs_df['r_MVP_1mo_daily_diff'].shift(-1)        coefs_df['sigma_MVP_1mo_daily_diff_fwd'] = coefs_df['sigma_MVP_1mo_daily_diff'].shift(-1)        coefs_df['u_1mo_daily_diff_fwd'] = coefs_df['u_1mo_daily_diff'].shift(-1)        coefs_regr_preds_df = coefs_regr_preds_df.merge(coefs_df, left_index=True, right_index=True)        # Add Predictands to DF    if(lookback_method == 'rolling_1mo'):        coefs_df = coefs_df[[col + '_1mo' for col in coefs]]        coefs_df['Date_1moPrior'] = coefs_df.index.to_series().shift(lookback_period)        coefs_df = coefs_df.rename(columns={coefs_df.columns[0] : predictands[0], coefs_df.columns[1] : predictands[1], coefs_df.columns[2] : predictands[2] })        coefs_regr_df = coefs_df.merge(coefs_regr_preds_df, left_on='Date_1moPrior', right_index=True, how='inner').copy()        coefs_regr_df = coefs_regr_df.rename(columns={'Date_1moPrior' : 'Date_coefs'})        coefs_regr_df.index = coefs_regr_df.index.rename('Date_pred')    elif(lookback_method == 'rolling_3mo'):        coefs_df = coefs_df[[col + '_3mo' for col in coefs]]        coefs_df['Date_3moPrior'] = coefs_df.index.to_series().shift(lookback_period)        coefs_df = coefs_df.rename(columns={coefs[0] : predictands[0], coefs[1] : predictands[1], coefs[2] : predictands[2] })        coefs_regr_df = coefs_df.merge(coefs_regr_preds_df, left_on='Date_3moPrior', right_index=True, how='inner').copy()        coefs_regr_df = coefs_regr_df.rename(columns={'Date_3moPrior' : 'Date_coefs'})        coefs_regr_df.index = coefs_regr_df.index.rename('Date_pred')    elif(lookback_method == 'yearly'):        coefs_df = coefs_df[coefs]        coefs_regr_preds_df_by_year = coefs_regr_preds_df.groupby('Year').mean().reset_index().copy()        coefs_df = coefs_regr_preds_df_by_year[coefs + ['Year']].copy()        coefs_df['Last_Year'] = coefs_df['Year'] - 1        coefs_df = coefs_df.rename(columns={coefs[0] : predictands[0], coefs[1] : predictands[1], coefs[2] : predictands[2]})        coefs_regr_df = coefs_df.dropna().merge(coefs_regr_preds_df_by_year, left_on='Last_Year', right_on='Year', how='outer').copy()        coefs_regr_df = coefs_regr_df.merge(date_df[['Year', 'Date']], left_on='Last_Year', right_on='Year')        coefs_regr_df.index = coefs_regr_df.index.rename('Date')        coefs_regr_df = coefs_regr_df.rename(columns={'Year_x' : 'Year_coefs', 'Year_y' : 'Year_preds'}).drop(columns=['Last_Year', 'Year', 'Date'])    elif(lookback_method == 'quarterly'):        coefs_df = coefs_df[coefs]        coefs_regr_preds_df_by_quarter = coefs_regr_preds_df.groupby('Quarter').mean().reset_index().copy()        coefs_df = coefs_regr_preds_df_by_quarter[coefs + ['Quarter']].copy()        coefs_df['Last_Quarter'] = coefs_df['Last_Quarter'] =  [get_last_quarter(quarter) for quarter in coefs_df['Quarter']]        coefs_df = coefs_df.rename(columns={coefs[0] : predictands[0], coefs[1] : predictands[1], coefs[2] : predictands[2]})        coefs_regr_df = coefs_df.dropna().merge(coefs_regr_preds_df_by_quarter, left_on='Last_Quarter', right_on='Quarter', how='outer').copy()        coefs_regr_df = coefs_regr_df.merge(date_df[['Quarter', 'Date']], left_on='Last_Quarter', right_on='Quarter')        coefs_regr_df.index = coefs_regr_df.index.rename('Date')        coefs_regr_df = coefs_regr_df.rename(columns={'Quarter_x' : 'Quarter_coefs', 'Quarter_y' : 'Quarter_preds'}).drop(columns=['Last_Quarter', 'Quarter', 'Date'])    else:        raise ValueError(f'Invalid lookback method: {lookback_method}')        return coefs_regr_dfdef create_coefs_regr_data(asset_set, lookback_method, lookback_period=int(252/4)):    assets_df = pd.read_csv('../Portfolios/'+asset_set+'/Assets_Data/assets_data.csv', parse_dates=['Date'])        assets_pred_df = add_predictors_to_df(assets_df)    assets_pred_df.to_csv('../Portfolios/'+asset_set+'/Assets_data/assets_data_w_predictors.csv', index=False)        coefs_regr_predictors_df = assets_pred_df.groupby(['Date']).mean()        lookback_method = lookback_method.lower()    coefs_regr_df = add_predictands_to_df(coefs_regr_predictors_df, asset_set, lookback_method, lookback_period=lookback_period)    coefs_regr_df.to_csv('../Portfolios/'+asset_set+'/Assets_Data/coefs_regr_data_'+lookback_method.lower() +'.csv', index=True)    return coefs_regr_df